# 리스트
# 해야할 일 목록 개념
# 값 여러개를 하나의 변수에 묶은 개념 (서랍장이다)
odd = [1, 3, 5, 7, 9] # 리스트의 사용법은 대괄호 사이에 값을 넣어주고 , 로 값을 구분 해준다.
print(type(odd)) # odd 의 타입을 찍어보면 class 'list' 라고 보여준다.

# 신기한것은 값이 다른 타입이어도 리스트에 넣을수 있다.
e = [1, 2, 'Life', 'is'] # 이렇게 해도 에러 없이 담긴다. 약간 java 에서 object 타입으로 map 쓴것처럼?? 
# 이렇게 쓰면 메모리나 속도 적으로 별로라고 한다.
e2 = [1, 2, ['life', 'is']] # list 안에 list 를 담는 형태도 가능하다. # 이건 뭐 다중 배열인건가;;;

# 리스트 인덱스
a = [1, 2, 3]
print(a[0]) # a 의 0 번째 인덱스 1 을 출력
print(a[1]) # a 의 1 번째 인덱스 2 을 출력
print(a[1] + a[2]) # a 의 0 번 1 번 인덱스 더해서 출력
print(a[-1]) # 인덱싱 번호에 음수를 넣으면 거꾸로 출력 한다 -1 번은 뒤에서 처음이니 3을 출력

# 다중 리스트
a = [1, 2, 3, ['a', 'b', 'c']] 
print(a[0]) # 0 번 을 출력하면 1 이 나오고
print(a[3]) # 3 번 을 출력하면 리스트 안의 리스트 통을 출력한다.
print(a[3][0]) # 3 번 인덱스 안에 0 번 인덱스를 출력하므로 'a' 가 나온다.

# 리스트 슬라이싱
a = [1, 2, 3, 4, 5]
print(a[0:2]) # 0 이상 2 미만 인덱스 출력 [1, 2] 를 출력한다.
print(a[0::2]) # 0 이상 1 미만 으로 2 인덱스 간격마다 출력

# 중첩된 리스트 슬라이스 하기
a = [1, 2, 3, ['a', 'b', 'c'], 4, 5]
print(a[2:5])

# 리스트 연산하기
a = [1, 2, 3]
b = [4, 5, 6]
print(a + b) # 리스트 끼리 더하면 문자열끼리 더한것 처럼 한 묶음으로 더해진다.

# 리스트 반복하기 (곱하기)
a = [1, 2, 3]
b = 3
print(a * b) # 리스트 에 곱하기를 적용하면 문자열 처럼 반복 하는 기능을 사용하게 된다. 단 반복하되 하나의 리스트안에서 반복하게 된다.

# 리스트 길이 구하기 (len())
a = [1, 2, 3]
print(len(a))

# 여기서 string 을 문자열 (문자 + 배열) 이라고 하는것 처럼 string 은 리스트의 특성을 비슷하게 갖고 있다.
# char + list 

# 주의!!!!!
# 파이썬에서는 서로 다른 형태의 자료형끼리 더할 수 없다
# print(1 + "hi") # 자바스크립트나 자바에서는 문자열로 더해지던데 파이썬은 이게 안된다.
print(str(1) + "hi") # 파이썬에서는 더해주려면 형변환을 시켜주어야 한다.
print( "hi" * 3) # 단 곱하기는 형변환 없이 가능하다.

# 리스트의 값 수정
a = [1, 2, 3]
print("바꾸기 전: " + str(a)) # 바꾸기 전은 3 
a[2] = 4
print("바꾼 후: " + str(a)) # 바꾼 후는 4

# 리스트의 요소 삭제하기 (del)
a = [1, 2, 3]
print("삭제 전: " + str(a)) # 삭제 전 [1, 2, 3]
del a[1]
print("삭제 후: " + str(a)) # 삭제 전 [1, 3]
# 슬라이싱 해서 요소 삭제하기
a = [1, 2, 3, 4, 5]
del a[2:]
print("슬라이싱 삭제: " + str(a)) # 2번 인덱스 이상부터 끝까지 삭제 한후 출력 [1, 2]