# 딕셔너리 
# 정말 사전의 의미를 갖는다고 한다.
# 사전처럼 어떤 값이 있고 그 값의 설명이 있는것 같은 구조이다.
# key value 로 이루어져 있다. 자바에서 map 과 같은 구조인거 같은데??

# 딕셔너리 생성
dic = {'name': 'pey', 'phone': '010-1234-5678', 'birth': '1118'} 
# 중괄호를 사용하고 {'키' : '값'} 이런 형식으로 만들어 사용한다.
print(type(dic)) # 타입을 출력 하면 dict 라고 나온다.
print(dic) 

# 1 개만 만들때?
dic2 = {1: 'hi'}
print(dic2)

# 딕셔너리의 value에 리스트도 넣을 수 있다.
# dic3 = {[1, 2]: 'ji'} # 하지만 key 에는 넣으면 에러를 발생시킨다. 
dic3 = {'ji' : [1, 2]}
print(dic3)

# 딕셔너리에 새로운 key, value 추가 
dic4 = {1 : 'a'}
print("추가 전: " + str(dic4)) # 추가 전
dic4['추가용'] = 1 # 딕셔너리에 추가 하는 방법은 변수명[key값] = value값 // 을 넣으면 자동으로 뒤에 추가가 된다.
print("추가 후: " +str(dic4)) # 추가 후
dic4['리스트 추가용'] = [1, 2]
print("리스트 추가 후: " +str(dic4)) # 추가 후

# 딕셔너리에 요소 삭제하기
del dic4['추가용'] # 삭제 기능은 "변수명[key값]" 으로 지정 해주어 삭제가 가능하다.
print(dic4) # 추가용 의 key value 가 삭제된 것을 볼 수 있다.

# 딕셔너리에서 key 를 사용해 value 얻기
grade = {'pey' : 10, 'jullet' : 90}
print(grade['pey']) # 이런식으로 변수명 안에 key 를 넣으면 value 를 갖고 온다.
print(grade['pey'], grade['jullet']) # 한번에 여러개를 갖고올 수 있다.

# 딕셔너리 만들때 주의 사항으로는 key 는 고유한 값이므로 중복되면 안된다.
a = {1:'a', 1:'b'}
print(a) # 출력해보면 마지막 1의 key 만 남아 있게 된다.

# 딕셔너리에서 key 의 값은 immutable 한 데이터만 들어올 수 있다. 
# 그러므로 list 같은 mutable 한 데이터는 못 들어고, 정수,실수, 문자열, 튜플 같은 immutable한 데이터만 들어올 수 있다.
b = {(1,2): '튜플?', 'str' : '문자열', 1 : '숫자', 1.2:'소수'} # 이렇게는 작동 한다.
print(b)
